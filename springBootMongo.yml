apiVersion: apps/v1
kind: Deployment
metadata:
  name : springbootapplication
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: springbootapp
  template:
    metadata:
      name: springbootapplicationpod
      labels:
        app: springbootapp
    spec:
      containers:
      - image: kammula280/springbootapplication
        name: springbootapplicationcontainer
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 5
          periodSeconds: 60
        livenessProbe:
           httpGet:
            path: /
            port: 8080
           initialDelaySeconds: 15
           timeoutSeconds: 5
           periodSeconds: 60  
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongo
        - name: MONOGO_INITDB_ROOT_USERNAME
          valueFrom:
            configMapKeyRef:
              name: springapp-configmap
              key: username
        - name: MONOGO_INITDB_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: springapp-configmap
              key: password
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:   
  name : springboot
spec:
  type: LoadBalancer
  selector: 
    app: springbootapp
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name : springapp-configmap
data:
  username: springapp
  password: mongodb@123
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: hpaspringbootdeployment
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name : springbootapplication
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - resource:
        name: cpu
        targetAverageUtilization: 50
      type: Resource
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongostatefulset
spec:
  replicas: 2
  serviceName: "mongo"
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      name: mongopod
      labels:
        app: mongo
    spec:
      containers:
      - image: mongo
        name: mongo
        env:
        - name: MONOGO_INITDB_ROOT_USERNAME
          valueFrom:
            configMapKeyRef:
              name: springapp-configmap
              key: username
        - name: MONOGO_INITDB_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: springapp-configmap
              key: password
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongodbebs
          mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongodbebs
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests: 
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  clusterIP: None
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app: mongo
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodbebs
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
